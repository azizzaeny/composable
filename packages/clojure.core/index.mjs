import partial from "./src/partial.mjs";
import apply from "./src/apply.mjs";
import comp from "./src/comp.mjs";
import constantly from "./src/constantly.mjs";
import identity from "./src/identity.mjs";
import fnil from "./src/fnil.mjs";
import memoize from "./src/memoize.mjs";
import complement from "./src/complement.mjs";
import juxt from "./src/juxt.mjs";
import someFn from "./src/someFn.mjs";
import partialRight from "./src/partialRight.mjs";
import or from "./src/or.mjs";
import and from "./src/and.mjs";
import doseq from "./src/doseq.mjs";
import dof from "./src/dof.mjs";
import isGt from "./src/isGt.mjs";
import isGte from "./src/isGte.mjs";
import isLt from "./src/isLt.mjs";
import isLte from "./src/isLte.mjs";
import isEqual from "./src/isEqual.mjs";
import isZero from "./src/isZero.mjs";
import isPos from "./src/isPos.mjs";
import isNeg from "./src/isNeg.mjs";
import isInt from "./src/isInt.mjs";
import isBoolean from "./src/isBoolean.mjs";
import isTrue from "./src/isTrue.mjs";
import isFalse from "./src/isFalse.mjs";
import isInstance from "./src/isInstance.mjs";
import isNil from "./src/isNil.mjs";
import isSome from "./src/isSome.mjs";
import isFn from "./src/isFn.mjs";
import isBlank from "./src/isBlank.mjs";
import isNumber from "./src/isNumber.mjs";
import isEven from "./src/isEven.mjs";
import isOdd from "./src/isOdd.mjs";
import isColl from "./src/isColl.mjs";
import isVector from "./src/isVector.mjs";
import isMap from "./src/isMap.mjs";
import isEmpty from "./src/isEmpty.mjs";
import not from "./src/not.mjs";
import isContains from "./src/isContains.mjs";
import isIncludes from "./src/isIncludes.mjs";
import threadf from "./src/threadf.mjs";
import threadl from "./src/threadl.mjs";
import cond from "./src/cond.mjs";
import condp from "./src/condp.mjs";
import condtf from "./src/condtf.mjs";
import condtl from "./src/condtl.mjs";
import when from "./src/when.mjs";
import whenNot from "./src/whenNot.mjs";
import iff from "./src/iff.mjs";
import ifNot from "./src/ifNot.mjs";
import casef from "./src/casef.mjs";
import add from "./src/add.mjs";
import subtract from "./src/subtract.mjs";
import multiply from "./src/multiply.mjs";
import divide from "./src/divide.mjs";
import quot from "./src/quot.mjs";
import mod from "./src/mod.mjs";
import rem from "./src/rem.mjs";
import inc from "./src/inc.mjs";
import dec from "./src/dec.mjs";
import max from "./src/max.mjs";
import min from "./src/min.mjs";
import toInt from "./src/toInt.mjs";
import subs from "./src/subs.mjs";
import replace from "./src/replace.mjs";
import replaceFirst from "./src/replaceFirst.mjs";
import join from "./src/join.mjs";
import escape from "./src/escape.mjs";
import rePattern from "./src/rePattern.mjs";
import reMatches from "./src/reMatches.mjs";
import capitalize from "./src/capitalize.mjs";
import lowerCase from "./src/lowerCase.mjs";
import upperCase from "./src/upperCase.mjs";
import trim from "./src/trim.mjs";
import trimNewline from "./src/trimNewline.mjs";
import triml from "./src/triml.mjs";
import trimr from "./src/trimr.mjs";
import char from "./src/char.mjs";
import keys from "./src/keys.mjs";
import vals from "./src/vals.mjs";
import count from "./src/count.mjs";
import conj from "./src/conj.mjs";
import cons from "./src/cons.mjs";
import disj from "./src/disj.mjs";
import concat from "./src/concat.mjs";
import first from "./src/first.mjs";
import ffirst from "./src/ffirst.mjs";
import second from "./src/second.mjs";
import last from "./src/last.mjs";
import next from "./src/next.mjs";
import nfirst from "./src/nfirst.mjs";
import nnext from "./src/nnext.mjs";
import fnext from "./src/fnext.mjs";
import take from "./src/take.mjs";
import takeNth from "./src/takeNth.mjs";
import takeLast from "./src/takeLast.mjs";
import takeWhile from "./src/takeWhile.mjs";
import rest from "./src/rest.mjs";
import nthrest from "./src/nthrest.mjs";
import drop from "./src/drop.mjs";
import dropLast from "./src/dropLast.mjs";
import dropWhile from "./src/dropWhile.mjs";
import peek from "./src/peek.mjs";
import pop from "./src/pop.mjs";
import get from "./src/get.mjs";
import getIn from "./src/getIn.mjs";
import assoc from "./src/assoc.mjs";
import assocIn from "./src/assocIn.mjs";
import dissoc from "./src/dissoc.mjs";
import update from "./src/update.mjs";
import updateIn from "./src/updateIn.mjs";
import merge from "./src/merge.mjs";
import mergeWith from "./src/mergeWith.mjs";
import selectKeys from "./src/selectKeys.mjs";
import renameKeys from "./src/renameKeys.mjs";
import zipmap from "./src/zipmap.mjs";
import into from "./src/into.mjs";
import seq from "./src/seq.mjs";
import vec from "./src/vec.mjs";
import subvec from "./src/subvec.mjs";
import repeat from "./src/repeat.mjs";
import repeatedly from "./src/repeatedly.mjs";
import range from "./src/range.mjs";
import keep from "./src/keep.mjs";
import keepIndexed from "./src/keepIndexed.mjs";
import split from "./src/split.mjs";
import splitAt from "./src/splitAt.mjs";
import splitWith from "./src/splitWith.mjs";
import splitLines from "./src/splitLines.mjs";
import shuffle from "./src/shuffle.mjs";
import randNth from "./src/randNth.mjs";
import rand from "./src/rand.mjs";
import randInt from "./src/randInt.mjs";
import find from "./src/find.mjs";
import map from "./src/map.mjs";
import mapcat from "./src/mapcat.mjs";
import mapIndexed from "./src/mapIndexed.mjs";
import filter from "./src/filter.mjs";
import remove from "./src/remove.mjs";
import isEvery from "./src/isEvery.mjs";
import everyPred from "./src/everyPred.mjs";
import flatten from "./src/flatten.mjs";
import reduce from "./src/reduce.mjs";
import sort from "./src/sort.mjs";
import sortBy from "./src/sortBy.mjs";
import compare from "./src/compare.mjs";
import reverse from "./src/reverse.mjs";
import interleave from "./src/interleave.mjs";
import interpose from "./src/interpose.mjs";
import distinct from "./src/distinct.mjs";
import groupBy from "./src/groupBy.mjs";
import frequencies from "./src/frequencies.mjs";
import partition from "./src/partition.mjs";
import partitionBy from "./src/partitionBy.mjs";
import partitionAll from "./src/partitionAll.mjs";
import union from "./src/union.mjs";
import difference from "./src/difference.mjs";
import intersection from "./src/intersection.mjs";
import atom from "./src/atom.mjs";
import deref from "./src/deref.mjs";
import reset from "./src/reset.mjs";
import swap from "./src/swap.mjs";
import compareAndSet from "./src/compareAndSet.mjs";
import addWatch from "./src/addWatch.mjs";
import removeWatch from "./src/removeWatch.mjs";
import setValidator from "./src/setValidator.mjs";
 
var isArray = isVector;
var isObject = isMap; 

export { partial, apply, comp, constantly, identity, fnil, memoize, complement, juxt, someFn, partialRight, or, and, doseq, dof, isGt, isGte, isLt, isLte, isEqual, isZero, isPos, isNeg, isInt, isBoolean, isTrue, isFalse, isInstance, isNil, isSome, isFn, isBlank, isNumber, isEven, isOdd, isColl, isVector, isMap, isEmpty, not, isContains, isIncludes, threadf, threadl, cond, condp, condtf, condtl, when, whenNot, iff, ifNot, casef, add, subtract, multiply, divide, quot, mod, rem, inc, dec, max, min, toInt, subs, replace, replaceFirst, join, escape, rePattern, reMatches, capitalize, lowerCase, upperCase, trim, trimNewline, triml, trimr, char, keys, vals, count, conj, cons, disj, concat, first, ffirst, second, last, next, nfirst, nnext, fnext, take, takeNth, takeLast, takeWhile, rest, nthrest, drop, dropLast, dropWhile, peek, pop, get, getIn, assoc, assocIn, dissoc, update, updateIn, merge, mergeWith, selectKeys, renameKeys, zipmap, into, seq, vec, subvec, repeat, repeatedly, range, keep, keepIndexed, split, splitAt, splitWith, splitLines, shuffle, randNth, rand, randInt, find, map, mapcat, mapIndexed, filter, remove, isEvery, everyPred, flatten, reduce, sort, sortBy, compare, reverse, interleave, interpose, distinct, groupBy, frequencies, partition, partitionBy, partitionAll, union, difference, intersection, atom, deref, reset, swap, compareAndSet, addWatch, removeWatch, setValidator, isArray, isObject };